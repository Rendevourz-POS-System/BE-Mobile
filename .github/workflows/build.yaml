name: Deploy Back-End

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [ '1.20' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version
      - name: Install dependencies & Build
        run: cd src && go mod download && go build -o .
      - name: Display-Build-Golang-App
        run: ls -R src

      - name: Login To Docker Hub
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.HUB_USERNAME }}
            password: ${{ secrets.HUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

#      - id: auth
#        uses: google-github-actions/auth@v2
#        with:
#            credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: install the gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_APPLICATION_CREDENTIALS }}
          export_default_credentials: true

#      - name: Configure Docker with gcloud
#        env:
#          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT }}
#        run: |
#          gcloud auth configure-docker asia-southeast2-docker.pkg.dev
#
#      - name: Build Docker image
#        run: |
#          docker build -t asia-southeast2-docker.pkg.dev/$GCP_PROJECT/docker-artifact/alpine:latest .
#
#      - name: Push Docker image
#        run: |
#          docker push asia-southeast2-docker.pkg.dev/$GCP_PROJECT/docker-artifact/alpine:latest

#  deploy:
#    needs: build
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Deploy container with SSH
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          port: 22
#          script: |
#            docker login -u ${{ secrets.HUB_USERNAME }} -p ${{ secrets.HUB_TOKEN }}
#            docker rm -f node-cicd
#            docker pull ${{ secrets.HUB_USERNAME }}/node-cicd:${{ github.run_number }}
#            docker run -d -p 80:3000 --name node-cicd ${{ secrets.HUB_USERNAME }}/node-cicd:${{ github.run_number }}
